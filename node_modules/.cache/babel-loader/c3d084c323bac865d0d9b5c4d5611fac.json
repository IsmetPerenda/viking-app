{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ismet\\\\Desktop\\\\za drive vol 2\\\\taste-up-frontend\\\\src\\\\commponents\\\\AdminPanel\\\\Team\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { NotificationManager } from 'react-notifications';\nimport TeamItem from \"./TeamItem\";\nimport DropDown from \"../DropDown/index\";\nimport \"./index.css\";\nimport { useDispatch } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport { loadTeamMembers, addTeamMember, editTeamMember, deleteTeamMember } from \"../../../actions/team\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  _id: null,\n  name: \"\",\n  short_description: \"\",\n  description: \"\",\n  image: \"\"\n};\n\nconst TeamPanel = ({\n  teamMembers\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [adminDisplayClass, setAdminDisplayClass] = useState(\"adminPanel\");\n  const [editableItem, setEditableItem] = useState(initialState);\n  const stableDispatch = useDispatch();\n  useEffect(() => {\n    stableDispatch(loadTeamMembers());\n  }, [stableDispatch]);\n\n  function renderItems() {\n    return teamMembers.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(TeamItem, {\n        item: item,\n        editMember: editMember,\n        deleteMember: deleteMember\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  function onChange(event) {\n    setEditableItem({ ...editableItem,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function addMember(item) {\n    if (item.name === \"\") {\n      NotificationManager.error('Please enter name.');\n    } else {\n      dispatch(addTeamMember(editableItem)).then(() => {\n        dispatch(loadTeamMembers());\n        setEditableItem(initialState);\n      });\n    }\n  }\n\n  function saveMember(item) {\n    if (item._id === null) {\n      NotificationManager.error('Please Select Item To Edit.');\n    } else {\n      editTeamMember(item).then(() => {\n        NotificationManager.success('Item Edited Succesfuly');\n        dispatch(loadTeamMembers());\n        setEditableItem(initialState);\n      });\n    }\n  }\n\n  function editMember(item) {\n    if (window.innerWidth < 600) {\n      setAdminDisplayClass(\"adminPanelDisplay\");\n    }\n\n    setEditableItem({ ...editableItem,\n      _id: item._id,\n      name: item.name,\n      short_description: item.short_description,\n      description: item.description,\n      image: item.image\n    });\n  }\n\n  function deleteMember(item) {\n    deleteTeamMember(item).then(() => {\n      dispatch(loadTeamMembers());\n    });\n  }\n\n  function openForm() {\n    if (window.innerWidth < 600) {\n      setAdminDisplayClass(\"adminPanelDisplay\");\n    }\n  }\n\n  function closeForm() {\n    setAdminDisplayClass(\"adminPanel\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminPanelContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DropDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui teal button buttonAddMobil\",\n          onClick: event => openForm(),\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminMenuItemsPanelWraper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui grid cardStyleMenuItemsContainer\",\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: adminDisplayClass,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonCloseFormContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" buttonCloseForm\",\n              onClick: event => closeForm(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"close icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 99\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui form formWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name...\",\n                onChange: e => onChange(e),\n                value: editableItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"short_description\",\n                placeholder: \"Short Description...\",\n                onChange: e => onChange(e),\n                value: editableItem.short_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"textArea\",\n                rows: \"2\",\n                type: \"text\",\n                placeholder: \"Description...\",\n                name: \"description\",\n                onChange: e => onChange(e),\n                value: editableItem.description,\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), editableItem.image && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: editableItem.image,\n                alt: editableItem.name,\n                className: \"imageContainer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"image\",\n                placeholder: \"Image...\",\n                onChange: e => onChange(e),\n                value: editableItem.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui positive buttonSave button\",\n              onClick: event => saveMember(editableItem),\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui teal button buttonAdd\",\n              onClick: event => addMember(editableItem),\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TeamPanel, \"Ec7oUG6nsQ4Y7XNfZVXO3CNsyYc=\", false, function () {\n  return [useDispatch, useDispatch];\n});\n\n_c = TeamPanel;\n\nconst mapStateToProps = state => ({\n  teamMembers: state.teamReducer.teamMembers\n});\n\nexport default connect(mapStateToProps)(TeamPanel);\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamPanel\");","map":{"version":3,"sources":["C:/Users/Ismet/Desktop/za drive vol 2/taste-up-frontend/src/commponents/AdminPanel/Team/index.js"],"names":["React","useEffect","useState","NotificationManager","TeamItem","DropDown","useDispatch","connect","loadTeamMembers","addTeamMember","editTeamMember","deleteTeamMember","initialState","_id","name","short_description","description","image","TeamPanel","teamMembers","dispatch","adminDisplayClass","setAdminDisplayClass","editableItem","setEditableItem","stableDispatch","renderItems","map","item","i","editMember","deleteMember","onChange","event","target","value","addMember","error","then","saveMember","success","window","innerWidth","openForm","closeForm","e","mapStateToProps","state","teamReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport TeamItem from \"./TeamItem\";\r\nimport DropDown from \"../DropDown/index\";\r\nimport \"./index.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    loadTeamMembers,\r\n    addTeamMember,\r\n    editTeamMember,\r\n    deleteTeamMember,\r\n} from \"../../../actions/team\";\r\n\r\n\r\nconst initialState = {\r\n    _id: null,\r\n    name: \"\",\r\n    short_description: \"\",\r\n    description: \"\",\r\n    image: \"\"\r\n}\r\n\r\nconst TeamPanel = ({ teamMembers }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [adminDisplayClass, setAdminDisplayClass] = useState(\"adminPanel\");\r\n\r\n    const [editableItem, setEditableItem] = useState(initialState);\r\n\r\n    const stableDispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        stableDispatch(loadTeamMembers());\r\n    }, [stableDispatch]);\r\n\r\n\r\n\r\n\r\n    function renderItems() {\r\n        return teamMembers.map((item, i) => {\r\n            return <TeamItem key={i} item={item} editMember={editMember} deleteMember={deleteMember} />;\r\n        });\r\n    }\r\n\r\n    function onChange(event) {\r\n        setEditableItem({\r\n            ...editableItem,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    function addMember(item) {\r\n        if (item.name === \"\") {\r\n            NotificationManager.error('Please enter name.')\r\n        } else {\r\n            dispatch(addTeamMember(editableItem)).then(() => {\r\n                dispatch(loadTeamMembers());\r\n                setEditableItem(initialState);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    function saveMember(item) {\r\n        if (item._id === null) {\r\n            NotificationManager.error('Please Select Item To Edit.')\r\n        } else {\r\n            editTeamMember(item).then(() => {\r\n                NotificationManager.success('Item Edited Succesfuly')\r\n                dispatch(loadTeamMembers())\r\n                setEditableItem(initialState)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function editMember(item) {\r\n        if (window.innerWidth < 600) {\r\n            setAdminDisplayClass(\"adminPanelDisplay\");\r\n        }\r\n\r\n        setEditableItem({\r\n            ...editableItem,\r\n            _id: item._id,\r\n            name: item.name,\r\n            short_description: item.short_description,\r\n            description: item.description,\r\n            image: item.image,\r\n        });\r\n    }\r\n\r\n\r\n    function deleteMember(item) {\r\n        deleteTeamMember(item).then(() => {\r\n            dispatch(loadTeamMembers());\r\n        });\r\n    }\r\n\r\n    function openForm() {\r\n        if (window.innerWidth < 600) {\r\n            setAdminDisplayClass(\"adminPanelDisplay\");\r\n        }\r\n\r\n    }\r\n\r\n    function closeForm() {\r\n        setAdminDisplayClass(\"adminPanel\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"adminPanelContainer\">\r\n\r\n                <div>\r\n                    <DropDown />\r\n                    <button className=\"ui teal button buttonAddMobil\" onClick={(event) => openForm()}> Add </button>\r\n                </div>\r\n\r\n\r\n                <div className=\"adminMenuItemsPanelWraper\">\r\n                    <div className=\"ui grid cardStyleMenuItemsContainer\">\r\n                        {renderItems()}\r\n                    </div>\r\n\r\n                    <div className={adminDisplayClass}>\r\n                        <div className=\"buttonCloseFormContainer\">\r\n                            <button className=\" buttonCloseForm\" onClick={(event) => closeForm()}><i className=\"close icon\"></i></button>\r\n                        </div>\r\n\r\n                        <div className=\"ui form formWrapper\">\r\n\r\n                            <div className=\"field\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Name...\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"short_description\"\r\n                                    placeholder=\"Short Description...\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.short_description}\r\n                                />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <textarea\r\n                                    className=\"textArea\"\r\n                                    rows=\"2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Description...\"\r\n                                    name=\"description\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.description}\r\n\r\n                                >\r\n                                    {\" \"}\r\n\r\n                                </textarea>\r\n                            </div>\r\n\r\n                            {editableItem.image && (\r\n                                <>\r\n                                    <img\r\n                                        src={editableItem.image}\r\n                                        alt={editableItem.name}\r\n                                        className=\"imageContainer\"\r\n                                    />\r\n                                </>\r\n                            )}\r\n                            <div className=\"field\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"image\"\r\n                                    placeholder=\"Image...\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.image}\r\n                                />\r\n                            </div>\r\n\r\n                            <button\r\n                                className=\"ui positive buttonSave button\"\r\n                                onClick={(event) => saveMember(editableItem)}\r\n                            >\r\n                                Save Changes\r\n                                </button>\r\n                            <button\r\n                                className=\"ui teal button buttonAdd\"\r\n                                onClick={(event) => addMember(editableItem)}\r\n                            >\r\n                                Add Item\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    teamMembers: state.teamReducer.teamMembers,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TeamPanel);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}