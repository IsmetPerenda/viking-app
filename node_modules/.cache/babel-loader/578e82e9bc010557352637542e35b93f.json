{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ismet\\\\Desktop\\\\za drive vol 2\\\\taste-up-frontend\\\\src\\\\commponents\\\\AdminPanel\\\\SpecialOffer\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { NotificationManager } from 'react-notifications';\nimport { useDispatch } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport OfferItem from \"./OfferItem\";\nimport DropDown from \"../DropDown/index\";\nimport \"../../../index.css\";\nimport \"./index.css\";\nimport { addMenuItem, loadMenuItems, editMenuItem, deleteMenuItem } from \"../../../actions/menuItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  _id: null,\n  title: \"\",\n  description: \"\",\n  short_description: \"\",\n  image: \"\",\n  tag: \"offer\"\n};\n\nconst SpecialOffer = ({\n  menuItems\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [adminDisplayClass, setAdminDisplayClass] = useState(\"adminPanel\");\n  const [editableItem, setEditableItem] = useState(initialState);\n  const stableDispatch = useDispatch();\n  useEffect(() => {\n    stableDispatch(loadMenuItems(\"offer\"));\n  }, [stableDispatch]);\n\n  function renderItemsByTag(tag) {\n    const list = menuItems.filter(item => item.tag === tag);\n    return list.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(OfferItem, {\n        item: item,\n        editItem: editItem,\n        deleteItem: deleteItem\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  function onChange(event) {\n    setEditableItem({ ...editableItem,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function addItemMenu(item) {\n    if (item.title === \"\") {\n      NotificationManager.error('Please enter title.');\n    } else {\n      dispatch(addMenuItem(editableItem)).then(() => {\n        dispatch(loadMenuItems(item.tag));\n        setEditableItem(initialState);\n      });\n    }\n  }\n\n  function saveMenuItemEdit(item) {\n    if (item._id === null) {\n      NotificationManager.error('Please Select Item To Edit.');\n    } else {\n      editMenuItem(item).then(() => {\n        NotificationManager.success('Item Edited Succesfuly');\n        dispatch(loadMenuItems(item.tag));\n        setEditableItem(initialState);\n      });\n    }\n  }\n\n  function editItem(item) {\n    if (window.innerWidth < 600) {\n      setAdminDisplayClass(\"adminPanelDisplay\");\n    }\n\n    setEditableItem({ ...editableItem,\n      _id: item._id,\n      title: item.title,\n      short_description: item.short_description,\n      description: item.description,\n      image: item.image\n    });\n  }\n\n  function deleteItem(item) {\n    window.confirm('Are you sure you wish to delete this item?');\n    deleteMenuItem(item).then(() => {\n      dispatch(loadMenuItems(item.tag));\n    });\n  }\n\n  function openForm() {\n    if (window.innerWidth < 600) {\n      setAdminDisplayClass(\"adminPanelDisplay\");\n    }\n  }\n\n  function closeForm() {\n    setAdminDisplayClass(\"adminPanel\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminPanelContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DropDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui teal button buttonAddMobil\",\n          onClick: event => openForm(),\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminMenuItemsPanelWraper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui grid cardStyleMenuItemsContainer\",\n          children: renderItemsByTag(\"offer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: adminDisplayClass,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonCloseFormContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" buttonCloseForm\",\n              onClick: event => closeForm(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"close icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 99\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui form formWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"titleTag\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"title\",\n                  placeholder: \"Title...\",\n                  onChange: e => onChange(e),\n                  value: editableItem.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \".\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"tag\",\n                  placeholder: \"Tag...\",\n                  onChange: e => onChange(e),\n                  value: editableItem.tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"short_description\",\n                placeholder: \"Short Description...\",\n                onChange: e => onChange(e),\n                value: editableItem.short_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"textArea\",\n                rows: \"2\",\n                onChange: e => onChange(e),\n                value: editableItem.description,\n                type: \"text\",\n                placeholder: \"Description...\",\n                name: \"description\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), editableItem.image && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: editableItem.image,\n                alt: editableItem.title,\n                className: \"imageContainer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"image\",\n                onChange: e => onChange(e),\n                value: editableItem.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui positive buttonSave button\",\n              onClick: event => saveMenuItemEdit(editableItem),\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui teal button buttonAdd\",\n              onClick: event => addItemMenu(editableItem),\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SpecialOffer, \"Ec7oUG6nsQ4Y7XNfZVXO3CNsyYc=\", false, function () {\n  return [useDispatch, useDispatch];\n});\n\n_c = SpecialOffer;\n\nconst mapStateToProps = state => ({\n  menuItems: state.menuItemReducer.menuItems\n});\n\nexport default connect(mapStateToProps)(SpecialOffer);\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecialOffer\");","map":{"version":3,"sources":["C:/Users/Ismet/Desktop/za drive vol 2/taste-up-frontend/src/commponents/AdminPanel/SpecialOffer/index.js"],"names":["React","useEffect","useState","NotificationManager","useDispatch","connect","OfferItem","DropDown","addMenuItem","loadMenuItems","editMenuItem","deleteMenuItem","initialState","_id","title","description","short_description","image","tag","SpecialOffer","menuItems","dispatch","adminDisplayClass","setAdminDisplayClass","editableItem","setEditableItem","stableDispatch","renderItemsByTag","list","filter","item","map","i","editItem","deleteItem","onChange","event","target","name","value","addItemMenu","error","then","saveMenuItemEdit","success","window","innerWidth","confirm","openForm","closeForm","e","mapStateToProps","state","menuItemReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport OfferItem from \"./OfferItem\";\r\nimport DropDown from \"../DropDown/index\";\r\nimport \"../../../index.css\";\r\nimport \"./index.css\";\r\nimport {\r\n    addMenuItem,\r\n    loadMenuItems,\r\n    editMenuItem,\r\n    deleteMenuItem,\r\n} from \"../../../actions/menuItems\";\r\n\r\nconst initialState = {\r\n    _id: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    short_description: \"\",\r\n    image: \"\",\r\n    tag: \"offer\"\r\n}\r\n\r\nconst SpecialOffer = ({ menuItems }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [adminDisplayClass, setAdminDisplayClass] = useState(\"adminPanel\");\r\n\r\n    const [editableItem, setEditableItem] = useState(initialState);\r\n\r\n    const stableDispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        stableDispatch(loadMenuItems(\"offer\"));\r\n    }, [stableDispatch]);\r\n\r\n\r\n\r\n\r\n    function renderItemsByTag(tag) {\r\n        const list = menuItems.filter(item => item.tag === tag)\r\n        return list.map((item, i) => {\r\n\r\n            return <OfferItem\r\n                key={i}\r\n                item={item}\r\n                editItem={editItem}\r\n                deleteItem={deleteItem} />;\r\n        });\r\n    }\r\n\r\n    function onChange(event) {\r\n        setEditableItem({\r\n            ...editableItem,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    function addItemMenu(item) {\r\n        if (item.title === \"\") {\r\n            NotificationManager.error('Please enter title.')\r\n        } else {\r\n            dispatch(addMenuItem(editableItem)).then(() => {\r\n                dispatch(loadMenuItems(item.tag));\r\n                setEditableItem(initialState);\r\n            });\r\n        }\r\n    }\r\n\r\n    function saveMenuItemEdit(item) {\r\n        if (item._id === null) {\r\n            NotificationManager.error('Please Select Item To Edit.')\r\n        } else {\r\n            editMenuItem(item).then(() => {\r\n                NotificationManager.success('Item Edited Succesfuly')\r\n                dispatch(loadMenuItems(item.tag))\r\n                setEditableItem(initialState)\r\n            });\r\n        }\r\n    }\r\n\r\n    function editItem(item) {\r\n        if (window.innerWidth < 600) {\r\n            setAdminDisplayClass(\"adminPanelDisplay\");\r\n        }\r\n\r\n        setEditableItem({\r\n            ...editableItem,\r\n            _id: item._id,\r\n            title: item.title,\r\n            short_description: item.short_description,\r\n            description: item.description,\r\n            image: item.image,\r\n        });\r\n    }\r\n\r\n    function deleteItem(item) {\r\n\r\n\r\n        window.confirm('Are you sure you wish to delete this item?')\r\n\r\n        deleteMenuItem(item).then(() => {\r\n            dispatch(loadMenuItems(item.tag));\r\n        });\r\n    }\r\n\r\n    function openForm() {\r\n        if (window.innerWidth < 600) {\r\n            setAdminDisplayClass(\"adminPanelDisplay\");\r\n        }\r\n    }\r\n\r\n    function closeForm() {\r\n        setAdminDisplayClass(\"adminPanel\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"adminPanelContainer\">\r\n                <div>\r\n                    <DropDown />\r\n                    <button className=\"ui teal button buttonAddMobil\" onClick={(event) => openForm()}> Add </button>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"adminMenuItemsPanelWraper\">\r\n                    <div className=\"ui grid cardStyleMenuItemsContainer\">\r\n                        {renderItemsByTag(\"offer\")}\r\n                    </div>\r\n\r\n                    <div className={adminDisplayClass}>\r\n                        <div className=\"buttonCloseFormContainer\">\r\n                            <button className=\" buttonCloseForm\" onClick={(event) => closeForm()}><i className=\"close icon\"></i></button>\r\n                        </div>\r\n\r\n                        <div className=\"ui form formWrapper\">\r\n                            <div className=\"titleTag\">\r\n                                <div className=\"field\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Title...\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={editableItem.title} />\r\n                                </div>\r\n                                <p>.</p>\r\n                                <div className=\"field\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"tag\"\r\n                                        placeholder=\"Tag...\"\r\n                                        onChange={(e) => onChange(e)}\r\n                                        value={editableItem.tag}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <div className=\"field\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"short_description\"\r\n                                    placeholder=\"Short Description...\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.short_description}\r\n                                />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <textarea\r\n                                    className=\"textArea\"\r\n                                    rows=\"2\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.description}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Description...\"\r\n                                    name=\"description\"\r\n                                >\r\n                                    {\" \"}\r\n                                </textarea>\r\n                            </div>\r\n                            {editableItem.image && (\r\n                                <>\r\n                                    <img\r\n                                        src={editableItem.image}\r\n                                        alt={editableItem.title}\r\n                                        className=\"imageContainer\"\r\n                                    />\r\n                                </>\r\n                            )}\r\n                            <div className=\"field\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"image\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.image}\r\n                                />\r\n                            </div>\r\n\r\n                            <button\r\n                                className=\"ui positive buttonSave button\"\r\n                                onClick={(event) => saveMenuItemEdit(editableItem)}\r\n                            >\r\n                                Save Changes\r\n                                </button>\r\n                            <button\r\n                                className=\"ui teal button buttonAdd\"\r\n                                onClick={(event) => addItemMenu(editableItem)}\r\n                            >\r\n                                Add Item\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    menuItems: state.menuItemReducer.menuItems,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SpecialOffer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}