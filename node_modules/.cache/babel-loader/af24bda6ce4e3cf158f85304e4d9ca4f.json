{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ismet\\\\Desktop\\\\taste-up-frontend\\\\src\\\\commponents\\\\AdminPanel\\\\Events\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport EventItem from \"./EventItem\";\nimport DropDown from \"../DropDown/index\";\nimport \"./index.css\";\nimport { NotificationManager } from 'react-notifications';\nimport { connect } from \"react-redux\";\nimport { loadEventItems, addEditItem, editMenuItem, deleteMenuItem } from \"../../../actions/events\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  _id: null,\n  title: \"\",\n  description: \"\",\n  time: \"\",\n  date: \"\",\n  image: \"\",\n  tag: \"event\"\n};\n\nconst EventsPanel = ({\n  eventsItem\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const stableDispatch = useDispatch();\n  const [adminDisplayClass, setAdminDisplayClass] = useState(\"adminPanel\");\n  const [editableItem, setEditableItem] = useState(initialState);\n  useEffect(() => {\n    stableDispatch(loadEventItems());\n  }, [stableDispatch]);\n\n  function renderItems() {\n    return eventsItem.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(EventItem, {\n        item: item,\n        editItem: editItem,\n        deleteItem: deleteItem\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  function onChange(event) {\n    setEditableItem({ ...editableItem,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function addItemMenu(item) {\n    if (item.title === \"\") {\n      NotificationManager.error('Please enter title.');\n    } else {\n      dispatch(addEditItem(editableItem)).then(() => {\n        dispatch(loadEventItems());\n        setEditableItem(initialState);\n      });\n    }\n  }\n\n  function saveMenuItemEdit(item) {\n    if (item._id === null) {\n      NotificationManager.error('Please Select Item To Edit.');\n    } else {\n      editMenuItem(item).then(() => {\n        NotificationManager.success('Item Edited Succesfuly');\n        dispatch(loadEventItems());\n        setEditableItem(initialState);\n      });\n    }\n  }\n\n  function editItem(item) {\n    if (window.innerWidth < 600) {\n      setAdminDisplayClass(\"adminPanelDisplay\");\n    }\n\n    setEditableItem({ ...editableItem,\n      _id: item._id,\n      title: item.title,\n      description: item.description,\n      time: item.time,\n      date: item.date,\n      image: item.image\n    });\n  }\n\n  function deleteItem(item) {\n    deleteMenuItem(item).then(() => {\n      dispatch(loadEventItems());\n    });\n  }\n\n  function openForm() {\n    if (window.innerWidth < 600) {\n      setAdminDisplayClass(\"adminPanelDisplay\");\n    }\n  }\n\n  function closeForm() {\n    setAdminDisplayClass(\"adminPanel\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminPanelContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DropDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui teal button buttonAddMobil\",\n          onClick: event => openForm(),\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adminMenuItemsPanelWraper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui grid cardStyleMenuItemsContainer\",\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: adminDisplayClass,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonCloseFormContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" buttonCloseForm\",\n              onClick: event => closeForm(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"close icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 95\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui form formWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                placeholder: \"Title...\",\n                onChange: e => onChange(e),\n                value: editableItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"textArea\",\n                rows: \"2\",\n                onChange: e => onChange(e),\n                value: editableItem.description,\n                type: \"text\",\n                placeholder: \"Description...\",\n                name: \"description\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui right labeled input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"amount\",\n                  className: \"ui label labelStyle\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"clock outline icon timeIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Time...\",\n                  name: \"time\",\n                  className: \"ui right labeled input\",\n                  onChange: e => onChange(e),\n                  value: editableItem.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"borderRight\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui right labeled input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"amount\",\n                  className: \"ui label labelCalendarStyle\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"calendar alternate outline icon timeIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  type: \"text\",\n                  placeholder: \"Date...\",\n                  name: \"date\",\n                  className: \"ui right labeled input\",\n                  onChange: e => onChange(e),\n                  value: editableItem.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"borderRight\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), editableItem.image && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: editableItem.image,\n                alt: editableItem.title,\n                className: \"imageContainer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"image\",\n                onChange: e => onChange(e),\n                value: editableItem.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui positive buttonSave button\",\n              onClick: event => saveMenuItemEdit(editableItem),\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui teal button buttonAdd\",\n              onClick: event => addItemMenu(editableItem),\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(EventsPanel, \"0GyEP/Jc5VpY6E7QA6soF6Mxr7Q=\", false, function () {\n  return [useDispatch, useDispatch];\n});\n\n_c = EventsPanel;\n\nconst mapStateToProps = state => ({\n  eventsItem: state.eventsReducer.eventsItem\n});\n\nexport default connect(mapStateToProps)(EventsPanel);\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsPanel\");","map":{"version":3,"sources":["C:/Users/Ismet/Desktop/taste-up-frontend/src/commponents/AdminPanel/Events/index.js"],"names":["useDispatch","React","useEffect","useState","EventItem","DropDown","NotificationManager","connect","loadEventItems","addEditItem","editMenuItem","deleteMenuItem","initialState","_id","title","description","time","date","image","tag","EventsPanel","eventsItem","dispatch","stableDispatch","adminDisplayClass","setAdminDisplayClass","editableItem","setEditableItem","renderItems","map","item","i","editItem","deleteItem","onChange","event","target","name","value","addItemMenu","error","then","saveMenuItemEdit","success","window","innerWidth","openForm","closeForm","e","mapStateToProps","state","eventsReducer"],"mappings":"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","sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport EventItem from \"./EventItem\";\r\nimport DropDown from \"../DropDown/index\";\r\nimport \"./index.css\";\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    loadEventItems,\r\n    addEditItem,\r\n    editMenuItem,\r\n    deleteMenuItem,\r\n} from \"../../../actions/events\";\r\n\r\n\r\nconst initialState = {\r\n    _id: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    time: \"\",\r\n    date: \"\",\r\n    image: \"\",\r\n    tag: \"event\"\r\n}\r\n\r\nconst EventsPanel = ({ eventsItem }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const stableDispatch = useDispatch()\r\n\r\n\r\n    const [adminDisplayClass, setAdminDisplayClass] = useState(\"adminPanel\");\r\n\r\n    const [editableItem, setEditableItem] = useState(initialState);\r\n\r\n    useEffect(() => {\r\n        stableDispatch(loadEventItems());\r\n    }, [stableDispatch]);\r\n\r\n    function renderItems() {\r\n        return eventsItem.map((item, i) => {\r\n            return <EventItem key={i} item={item} editItem={editItem} deleteItem={deleteItem} />;\r\n        });\r\n    }\r\n\r\n    function onChange(event) {\r\n        setEditableItem({\r\n            ...editableItem,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    function addItemMenu(item) {\r\n        if (item.title === \"\") {\r\n            NotificationManager.error('Please enter title.')\r\n        } else {\r\n            dispatch(addEditItem(editableItem)).then(() => {\r\n                dispatch(loadEventItems());\r\n                setEditableItem(initialState);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    function saveMenuItemEdit(item) {\r\n        if (item._id === null) {\r\n            NotificationManager.error('Please Select Item To Edit.')\r\n        } else {\r\n            editMenuItem(item).then(() => {\r\n                NotificationManager.success('Item Edited Succesfuly')\r\n                dispatch(loadEventItems())\r\n                setEditableItem(initialState)\r\n            });\r\n        }\r\n    }\r\n\r\n    function editItem(item) {\r\n        if (window.innerWidth < 600) {\r\n            setAdminDisplayClass(\"adminPanelDisplay\");\r\n        }\r\n        setEditableItem({\r\n            ...editableItem,\r\n            _id: item._id,\r\n            title: item.title,\r\n            description: item.description,\r\n            time: item.time,\r\n            date: item.date,\r\n            image: item.image,\r\n        });\r\n    }\r\n\r\n    function deleteItem(item) {\r\n        deleteMenuItem(item).then(() => {\r\n            dispatch(loadEventItems());\r\n        });\r\n    }\r\n\r\n    function openForm() {\r\n        if (window.innerWidth < 600) {\r\n            setAdminDisplayClass(\"adminPanelDisplay\");\r\n        }\r\n    }\r\n\r\n    function closeForm() {\r\n        setAdminDisplayClass(\"adminPanel\");\r\n    }\r\n\r\n    return (\r\n        <><div className=\"adminPanelContainer\">\r\n            <div>\r\n                <DropDown />\r\n                <button className=\"ui teal button buttonAddMobil\" onClick={(event) => openForm()}> Add </button>\r\n            </div>\r\n            <div className=\"adminMenuItemsPanelWraper\">\r\n                <div className=\"ui grid cardStyleMenuItemsContainer\">\r\n                    {renderItems()}\r\n                </div>\r\n\r\n                <div className={adminDisplayClass}>\r\n                    <div className=\"buttonCloseFormContainer\">\r\n                        <button className=\" buttonCloseForm\" onClick={(event) => closeForm()}><i className=\"close icon\"></i></button>\r\n                    </div>\r\n\r\n                    <div className=\"ui form formWrapper\">\r\n                        <div className=\"field\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                placeholder=\"Title...\"\r\n                                onChange={(e) => onChange(e)}\r\n                                value={editableItem.title} />\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <textarea\r\n                                className=\"textArea\"\r\n                                rows=\"2\"\r\n                                onChange={(e) => onChange(e)}\r\n                                value={editableItem.description}\r\n                                type=\"text\"\r\n                                placeholder=\"Description...\"\r\n                                name=\"description\"\r\n                            >\r\n                                {\" \"}\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <div className=\"ui right labeled input\">\r\n                                <label htmlFor=\"amount\" className=\"ui label labelStyle\">\r\n                                    <i className=\"clock outline icon timeIcon\" />\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Time...\"\r\n                                    name=\"time\"\r\n                                    className=\"ui right labeled input\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.time}\r\n                                />\r\n                                <div className=\"borderRight\"> </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <div className=\"ui right labeled input\">\r\n                                <label htmlFor=\"amount\" className=\"ui label labelCalendarStyle\">\r\n                                    <i className=\"calendar alternate outline icon timeIcon\" />\r\n                                </label>\r\n                                <input\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Date...\"\r\n                                    name=\"date\"\r\n                                    className=\"ui right labeled input\"\r\n                                    onChange={(e) => onChange(e)}\r\n                                    value={editableItem.date}\r\n                                />\r\n                                <div className=\"borderRight\"> </div>\r\n                            </div>\r\n                        </div>\r\n                        {editableItem.image && (\r\n                            <>\r\n                                <img\r\n                                    src={editableItem.image}\r\n                                    alt={editableItem.title}\r\n                                    className=\"imageContainer\"\r\n                                />\r\n                            </>\r\n                        )}\r\n                        <div className=\"field\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"image\"\r\n                                onChange={(e) => onChange(e)}\r\n                                value={editableItem.image}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"ui positive buttonSave button\"\r\n                            onClick={(event) => saveMenuItemEdit(editableItem)}\r\n                        >\r\n                            Save Changes\r\n                                </button>\r\n                        <button\r\n                            className=\"ui teal button buttonAdd\"\r\n                            onClick={(event) => addItemMenu(editableItem)}\r\n                        >\r\n                            Add Item\r\n                            </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    eventsItem: state.eventsReducer.eventsItem,\r\n});\r\n\r\nexport default connect(mapStateToProps)(EventsPanel);\r\n"]},"metadata":{},"sourceType":"module"}