{"ast":null,"code":"import axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nimport { EVENT_ITEMS_LOADED, EVENT_ITEMS_LOADING_FAIL, ADDED_EVENT_ITEM, ADDED_EVENT_ITEM_FAIL } from \"./types\";\nconst token = localStorage.getItem(\"token\");\nexport const loadEventItems = () => {\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": `${token}`\n        }\n      };\n      const res = await axios.get(process.env.REACT_APP_BACKEND_URL + \"/api/event\", config);\n\n      if (res.status === 200) {\n        dispatch({\n          type: EVENT_ITEMS_LOADED,\n          payload: res.data\n        });\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        console.log(errors);\n      }\n\n      dispatch({\n        type: EVENT_ITEMS_LOADING_FAIL\n      });\n    }\n  };\n};\nexport const addEditItem = item => {\n  return async dispatch => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": `${token}`\n        }\n      };\n      const res = await axios.post(process.env.REACT_APP_BACKEND_URL + \"/api/event\", item, config);\n\n      if (res.status === 200) {\n        NotificationManager.success(\"Item Added Succesfuly\");\n        dispatch({\n          type: ADDED_EVENT_ITEM,\n          payload: res.data\n        });\n      }\n\n      if (res.status === 404) {}\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        console.log(errors);\n        dispatch({\n          type: ADDED_EVENT_ITEM_FAIL\n        });\n      }\n    }\n  };\n};\nexport const editMenuItem = item => {\n  if (item._id === undefined) {\n    NotificationManager.error(\"Please Select Item To Edit.\");\n  } else {\n    const token = localStorage.getItem(\"token\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": `${token}`\n      }\n    };\n    return axios.patch(process.env.REACT_APP_BACKEND_URL + `/api/event/${item._id}`, item, config);\n  }\n};\nexport const deleteMenuItem = item => {\n  NotificationManager.info(\"Item Deleted Succesfuly\");\n  const token = localStorage.getItem(\"token\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": `${token}`\n    }\n  };\n  return axios.delete(process.env.REACT_APP_BACKEND_URL + `/api/event/${item._id}`, config);\n};","map":{"version":3,"sources":["C:/Users/Ismet/Desktop/taste-up-frontend/src/actions/events.js"],"names":["axios","NotificationManager","EVENT_ITEMS_LOADED","EVENT_ITEMS_LOADING_FAIL","ADDED_EVENT_ITEM","ADDED_EVENT_ITEM_FAIL","token","localStorage","getItem","loadEventItems","dispatch","config","headers","res","get","process","env","REACT_APP_BACKEND_URL","status","type","payload","data","err","errors","response","console","log","addEditItem","item","post","success","editMenuItem","_id","undefined","error","patch","deleteMenuItem","info","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nimport {\r\n  EVENT_ITEMS_LOADED,\r\n  EVENT_ITEMS_LOADING_FAIL,\r\n  ADDED_EVENT_ITEM,\r\n  ADDED_EVENT_ITEM_FAIL,\r\n} from \"./types\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nexport const loadEventItems = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-auth-token\": `${token}`,\r\n        },\r\n      };\r\n      const res = await axios.get(\r\n        process.env.REACT_APP_BACKEND_URL + \"/api/event\",\r\n        config\r\n      );\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: EVENT_ITEMS_LOADED,\r\n          payload: res.data,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        console.log(errors);\r\n      }\r\n      dispatch({\r\n        type: EVENT_ITEMS_LOADING_FAIL,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addEditItem = (item) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-auth-token\": `${token}`,\r\n        },\r\n      };\r\n\r\n      const res = await axios.post(\r\n        process.env.REACT_APP_BACKEND_URL + \"/api/event\",\r\n        item,\r\n        config\r\n      );\r\n      if (res.status === 200) {\r\n        NotificationManager.success(\"Item Added Succesfuly\");\r\n        dispatch({\r\n          type: ADDED_EVENT_ITEM,\r\n          payload: res.data,\r\n        });\r\n      }\r\n      if (res.status === 404) {\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        console.log(errors);\r\n        dispatch({\r\n          type: ADDED_EVENT_ITEM_FAIL,\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMenuItem = (item) => {\r\n  if (item._id === undefined) {\r\n    NotificationManager.error(\"Please Select Item To Edit.\");\r\n  } else {\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": `${token}`,\r\n      },\r\n    };\r\n    return axios.patch(\r\n      process.env.REACT_APP_BACKEND_URL + `/api/event/${item._id}`,\r\n      item,\r\n      config\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteMenuItem = (item) => {\r\n  NotificationManager.info(\"Item Deleted Succesfuly\");\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": `${token}`,\r\n    },\r\n  };\r\n\r\n  return axios.delete(\r\n    process.env.REACT_APP_BACKEND_URL + `/api/event/${item._id}`,\r\n    config\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}