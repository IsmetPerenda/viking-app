{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from \"./types\";\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(process.env.REACT_APP_BACKEND_URL + \"/api/login\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(process.env.REACT_APP_BACKEND_URL + \"/api/login\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      console.log(errors);\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //LOGOUT / CLEAR PROFILE\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/Ismet/Desktop/taste-up-frontend/src/actions/auth.js"],"names":["axios","setAuthToken","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","loadUser","dispatch","localStorage","token","res","get","process","env","REACT_APP_BACKEND_URL","type","payload","data","err","login","email","password","config","headers","body","JSON","stringify","post","errors","response","console","log","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,MALF,QAMO,SANP;AAQA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBT,IAAAA,YAAY,CAACQ,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAChBC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,YADpB,CAAlB;AAIAP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,WADC;AAEPe,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GATD,CASE,OAAOC,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD;AACF,CAlBM;AAoBP,OAAO,MAAMiB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOd,QAAP,IAAoB;AAC5D,QAAMe,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMX,KAAK,CAAC4B,IAAN,CAChBf,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,YADpB,EAEhBU,IAFgB,EAGhBF,MAHgB,CAAlB;AAMAf,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFN,KAAD,CAAR;AAKAV,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GAbD,CAaE,OAAOY,GAAP,EAAY;AACZ,UAAMU,MAAM,GAAGV,GAAG,CAACW,QAAJ,CAAaZ,IAAb,CAAkBW,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AACDrB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGD;AACF,CAhCM,C,CAkCP;;AACA,OAAO,MAAM6B,MAAM,GAAG,MAAOzB,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;AACD,CAFM","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\r\n      process.env.REACT_APP_BACKEND_URL + \"/api/login\"\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      process.env.REACT_APP_BACKEND_URL + \"/api/login\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      console.log(errors);\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT / CLEAR PROFILE\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}